{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER-PC\\\\Desktop\\\\15 Multi-Page SPA with React Router\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning React is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Maximilian\",\n  text: \"Learning React is great!\"\n}];\nfunction QuateDetail() {\n  _s();\n  const match = useRouteMatch();\n  ClipboardMATCH;\n  const params = useParams();\n  console.log(params);\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No quote found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(QuateDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n_c = QuateDetail;\nexport default QuateDetail;\nvar _c;\n$RefreshReg$(_c, \"QuateDetail\");","map":{"version":3,"names":["useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuateDetail","match","ClipboardMATCH","params","console","log","quote","find","quoteId"],"sources":["C:/Users/USER-PC/Desktop/15 Multi-Page SPA with React Router/src/pages/QuoteDetail.js"],"sourcesContent":["import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\r\n  { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great!\" },\r\n];\r\n\r\nfunction QuateDetail() {\r\n  const match = useRouteMatch();\r\n  ClipboardMATCH;\r\n  const params = useParams();\r\n  console.log(params);\r\n\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n  if (!quote) return <p>No quote found!</p>;\r\n\r\n  return (\r\n    <>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={`/quotes/${params.quoteId}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\r\n            Load comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`/quotes/${params.quoteId}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuateDetail;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACxE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AAAC;AAAA;AAErE,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAyB,CAAC,EAC3D;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,YAAY;EAAEC,IAAI,EAAE;AAA2B,CAAC,CACrE;AAED,SAASC,WAAW,GAAG;EAAA;EACrB,MAAMC,KAAK,GAAGR,aAAa,EAAE;EAC7BS,cAAc;EACd,MAAMC,MAAM,GAAGb,SAAS,EAAE;EAC1Bc,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAEnB,MAAMG,KAAK,GAAGV,YAAY,CAACW,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACT,EAAE,KAAKM,MAAM,CAACK,OAAO,CAAC;EAEvE,IAAI,CAACF,KAAK,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAsB;EAEzC,oBACE;IAAA,wBACE,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACP,IAAK;MAAC,MAAM,EAAEO,KAAK,CAACR;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5D,QAAC,KAAK;MAAC,IAAI,EAAG,WAAUK,MAAM,CAACK,OAAQ,EAAE;MAAC,KAAK;MAAA,uBAC7C;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,WAAUL,MAAM,CAACK,OAAQ,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAE9D;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACA,eACR,QAAC,KAAK;MAAC,IAAI,EAAG,WAAUL,MAAM,CAACK,OAAQ,WAAW;MAAA,uBAChD,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN;EAAA,gBACP;AAEP;AAAC,GAzBQR,WAAW;EAAA,QACJP,aAAa,EAEZH,SAAS;AAAA;AAAA,KAHjBU,WAAW;AA2BpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}